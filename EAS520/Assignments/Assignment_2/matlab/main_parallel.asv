clear all;

% Create a parallel pool if none exists
if isempty(gcp())
    parpool();
end

% Parallel computations
n1 = 8;
n2 = 54;
n3 = 400;

p = feature('numcores');


tic
parfor i=1:n1
    timeconsumingfun(5)
end
tp1 = toc;


tic
parfor i=1:n2
    timeconsumingfun(5)
end
tp2 = toc;


tic
parfor i=1:n3
    timeconsumingfun(5)
end
tp3 = toc;

t1 = getT1();

speedup_1 = getSpeedup(tp1, t1);
speedup_2 = getSpeedup(tp2, t1);
speedup_3 = getSpeedup(tp3, t1);

efficiency_1 = getEfficiency(speedup_1, p);
efficiency_2 = getEfficiency(speedup_2, p);
efficiency_3 = getEfficiency(speedup_3, p);

fprintf("for n: %d, speedup is %f and efficiency id")
