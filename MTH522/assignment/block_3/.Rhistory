pairs(Auto[,1:9])
library(ISLR)
Auto = read.csv("/Volumes/work/MTH522/data/Auto1.csv")
head(Auto)
Auto1 <- Auto
Auto1$mpg01 <- NA
mpg_median = median(Auto1$mpg)
print(mpg_median)
for(i in 1:dim(Auto1)[1]){
if (Auto1$mpg[i] > mpg_median){
Auto1$mpg01[i] = 1
}else{
Auto1$mpg01[i] = 0
}
}
#Auto1 <- data.frame(Auto,mpg01)
head(Auto1)
colnames(Auto1)
pairs(Auto[,1:9])
pairs(Auto[,1:9])
library(ISLR)
Auto = read.csv("/Volumes/work/MTH522/data/auto1.csv")
head(Auto)
Auto1 <- Auto
Auto1$mpg01 <- NA
mpg_median = median(Auto1$mpg)
print(mpg_median)
for(i in 1:dim(Auto1)[1]){
if (Auto1$mpg[i] > mpg_median){
Auto1$mpg01[i] = 1
}else{
Auto1$mpg01[i] = 0
}
}
#Auto1 <- data.frame(Auto,mpg01)
head(Auto1)
colnames(Auto1)
pairs(Auto[,1:9])
pairs(Auto[,1:9])
pairs(Auto[,1:9])
autocorr = cor(subset(Auto1,select = -c(name)))
autocorr
require(caTools)
set.seed(123)
split_data = sample.split(Auto1$mpg, SplitRatio = 0.70)
train1 = subset(Auto1, split_data==TRUE)
test1 = subset(Auto1, split_data==FALSE)
require(caTools)
set.seed(123)
split_data = sample.split(Auto1$mpg, SplitRatio = 0.70)
train1 = subset(Auto1, split_data==TRUE)
test1 = subset(Auto1, split_data==FALSE)
require(caTools)
set.seed(123)
split_data = sample.split(Auto1$mpg, SplitRatio = 0.70)
train1 = subset(Auto1, split_data==TRUE)
test1 = subset(Auto1, split_data==FALSE)
Auto1_glm = glm(mpg01 ~ cylinders+displacement+horsepower+weight, data=train1, family=binomial)
Auto1_prob = predict(Auto1_glm,test1,type="response")
Auto1_pred = rep(0,length(test1$mpg01))
Auto1_pred[Auto1_prob >0.5] = 1
table(Auto1_pred,test1$mpg01)
mean(Auto1_pred != test1$mpg01)
mean(Auto1_pred != test1$mpg01)
mean(Auto1_pred != test1$mpg01)
require(caTools)
set.seed(123)
split_data = sample.split(Auto1$mpg, SplitRatio = 0.70)
train1 = subset(Auto1, split_data==TRUE)
test1 = subset(Auto1, split_data==FALSE)
Auto1_glm = glm(mpg01 ~ cylinders+displacement+horsepower+weight, data=train1, family=binomial)
Auto1_prob = predict(Auto1_glm,test1,type="response")
Auto1_pred = rep(0,length(test1$mpg01))
Auto1_pred[Auto1_prob >0.5] = 1
table(Auto1_pred,test1$mpg01)
mean(Auto1_pred != test1$mpg01)
pairs(Auto[,1:9])
library(ISLR)
Boston = read.csv("/Volumes/work/MTH522/data/Boston.csv")
head(Boston)
Boston1 <- Boston
Boston1$crim01 <- NA
crim_median = median(Boston1$crim)
print(crim_median)
for(i in 1:dim(Boston1)[1]){
if (Boston1$crim[i] > crim_median){
Boston1$crim01[i] = 1
}else{
Boston1$crim01[i] = 0
}
}
head(Boston1)
pairs(Boston1[,1:15], main="Scatterplot matrix which includes all of the variables in Boston2 dataset")
autocorr = cor(Boston1$crim01,Boston1)
autocorr
library(ISLR)
Boston = read.csv("/Volumes/work/MTH522/data/Boston.csv")
head(Boston)
Boston1 <- Boston
Boston1$crim01 <- NA
crim_median = median(Boston1$crim)
print(crim_median)
for(i in 1:dim(Boston1)[1]){
if (Boston1$crim[i] > crim_median){
Boston1$crim01[i] = 1
}else{
Boston1$crim01[i] = 0
}
}
head(Boston1)
pairs(Boston1[,1:15], main="Scatterplot matrix which includes all of the variables in Boston2 dataset")
autocorr = cor(Boston1$crim01,Boston1)
autocorr
require(caTools)
set.seed(123)
Boston_split = sample.split(Boston1$crim01, SplitRatio = 0.80)
Boston_train = subset(Boston1, Boston_split==TRUE)
Boston_test = subset(Boston1, Boston_split==FALSE)
Boston1_glm = glm(crim01 ~ indus+nox+age+rad+tax, data=Boston_train, family=binomial)
Boston1_prob = predict(Boston1_glm,Boston_test,type="response")
Boston1_pred = rep(0,length(Boston_test$crim01))
Boston1_pred[Boston1_prob >0.5] = 1
table(Boston1_pred,Boston_test$crim01)
mean(Boston1_pred != Boston_test$crim01)
require(caTools)
set.seed(123)
Boston_split = sample.split(Boston1$crim01, SplitRatio = 0.80)
Boston_train = subset(Boston1, Boston_split==TRUE)
Boston_test = subset(Boston1, Boston_split==FALSE)
Boston1_glm = glm(crim01 ~ indus+nox+age+rad+tax, data=Boston_train, family=binomial)
Boston1_prob = predict(Boston1_glm,Boston_test,type="response")
Boston1_pred = rep(0,length(Boston_test$crim01))
Boston1_pred[Boston1_prob >0.5] = 1
table(Boston1_pred,Boston_test$crim01)
mean(Boston1_pred != Boston_test$crim01)
pairs(Boston1[,1:15], title="Scatterplot matrix which includes all of the variables")
pairs(Boston1[,1:15], main="Scatterplot matrix which includes all of the variables")
pairs(Boston1[,1:15], main="Scatterplot matrix including all of the variables")
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
library(ISLR)
Auto1 = read.csv("/Volumes/work/MTH522/data/auto1.csv")
head(Auto)
# Auto1 <- Auto
Auto1$mpg01 <- NA
mpg_median = median(Auto1$mpg)
print(mpg_median)
for(i in 1:dim(Auto1)[1]){
if (Auto1$mpg[i] > mpg_median){
Auto1$mpg01[i] = 1
}else{
Auto1$mpg01[i] = 0
}
}
#Auto1 <- data.frame(Auto,mpg01)
head(Auto1)
mpg01 = rep(0, dim(Auto)[1])
mpg01[Auto$mpg > median(Auto$mpg)] = 1
Auto = data.frame(Auto, mpg01)
head(Auto)
pairs(Auto[,1:9])
autocorr = cor(subset(Auto1,select = -c(name)))
autocorr
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
mtext("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -3)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -3)
par(mfrow = c(3, 2))
plot(head="Scatterplots for cars with above(1) and below(0) median mpg")
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -13)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = 0)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = 1)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -2)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1.1)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
mtext("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1.1)
plot(Auto$year, Auto$mpg)
abline(h = median(Auto$mpg), lwd = 2, col = "red")
plot(Auto$origin, Auto$mpg, xlab = "Origin", ylab = "MPG")
abline(h = median(Auto$mpg), lwd = 2, col = "red")
Auto$origin[Auto$origin == 1] = "Origin 1"
Auto$origin[Auto$origin == 2] = "Origin 2"
Auto$origin[Auto$origin == 3] = "Origin 3"
Auto$origin = as.factor(Auto$origin)
head(Auto)
plot(Auto$origin, Auto$mpg, xlab = "Origin", ylab = "MPG")
abline(h = median(Auto$mpg), lwd = 2, col = "red")
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
mtext("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = 0)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
mtext("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
mtext("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -0.5)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
mtext("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -0.8)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
mtext("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -0.99)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
mtext("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -0.99999)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
title("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -0.99999)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
title("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
title("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
title("Boxplots for cars with above(1) and below(0) median mpg", line = -1)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
title("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1)
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
title("Boxplots for cars with above(1) and below(0) median mpg")
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
title("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1)
library(ISLR)
Auto1 = read.csv("/Volumes/work/MTH522/data/auto1.csv")
head(Auto)
Auto$origin[Auto$origin == 1] = "Origin 1"
Auto$origin[Auto$origin == 2] = "Origin 2"
Auto$origin[Auto$origin == 3] = "Origin 3"
Auto$origin = as.factor(Auto$origin)
head(Auto)
mpg01 = rep(0, dim(Auto)[1])
mpg01[Auto$mpg > median(Auto$mpg)] = 1
Auto = data.frame(Auto, mpg01)
head(Auto)
colnames(Auto1)
pairs(Auto[,1:9])
autocorr = cor(subset(Auto1,select = -c(name)))
autocorr
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
title("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1.1)
plot(Auto$year, Auto$mpg)
abline(h = median(Auto$mpg), lwd = 2, col = "red")
plot(Auto$origin, Auto$mpg, xlab = "Origin", ylab = "MPG")
abline(h = median(Auto$mpg), lwd = 2, col = "red")
require(caTools)
set.seed(123)
split_data = sample.split(Auto1$mpg, SplitRatio = 0.70)
train1 = subset(Auto1, split_data==TRUE)
test1 = subset(Auto1, split_data==FALSE)
Auto1_glm = glm(mpg01 ~ cylinders+displacement+horsepower+weight, data=train1, family=binomial)
require(caTools)
set.seed(123)
split_data = sample.split(Auto1$mpg, SplitRatio = 0.70)
train1 = subset(Auto1, split_data==TRUE)
test1 = subset(Auto1, split_data==FALSE)
Auto1_glm = glm(mpg01 ~ cylinders+displacement+horsepower+weight, data=train1, family=binomial)
mean(Auto1_pred != test1$mpg01)
Auto1_glm = glm(mpg01 ~ cylinders+displacement+horsepower+weight, data=train1, family=binomial)
Auto1_glm = glm(mpg01 ~ cylinders+displacement+horsepower+weight, data=train1, family=binomial)
Auto1_glm = glm(mpg01 ~ cylinders+displacement+horsepower+weight, data=train1, family=binomial)
qda.fit = qda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
install.packages('topicmodels')
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
library(ISLR)
library(MASS)
library(class)
Auto1 = read.csv("/Volumes/work/MTH522/data/auto1.csv")
head(Auto)
library(ISLR)
library(MASS)
library(class)
Auto1 = read.csv("/Volumes/work/MTH522/data/auto1.csv")
head(Auto)
Auto$origin[Auto$origin == 1] = "Origin 1"
Auto$origin[Auto$origin == 2] = "Origin 2"
Auto$origin[Auto$origin == 3] = "Origin 3"
Auto$origin = as.factor(Auto$origin)
head(Auto)
mpg01 = rep(0, dim(Auto)[1])
mpg01[Auto$mpg > median(Auto$mpg)] = 1
Auto = data.frame(Auto, mpg01)
head(Auto)
colnames(Auto1)
pairs(Auto[,1:9])
autocorr = cor(subset(Auto1,select = -c(name)))
autocorr
par(mfrow = c(2, 3))
plot(factor(Auto$mpg01), Auto$cylinders, ylab = "Number of engine cylinders")
plot(factor(Auto$mpg01), Auto$displacement, ylab = "Engine displacement (cubic inches)")
plot(factor(Auto$mpg01), Auto$horsepower, ylab = "Horsepower")
plot(factor(Auto$mpg01), Auto$weight, ylab = "Weight (pounds)")
plot(factor(Auto$mpg01), Auto$acceleration, ylab = "Time to reach 60mpg (seconds)")
plot(factor(Auto$mpg01), Auto$year, ylab = "Manufacture year")
title("Boxplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1)
par(mfrow = c(3, 2))
plot(Auto$cylinders, Auto$mpg01, xlab = "Number of engine cylinders")
plot(Auto$displacement, Auto$mpg01, xlab = "Engine displacement (cubic inches)")
plot(Auto$horsepower, Auto$mpg01, xlab = "Horsepower")
plot(Auto$weight, Auto$mpg01, xlab = "Weight (pounds)")
plot(Auto$acceleration, Auto$mpg01, xlab = "Time to reach 60mpg (seconds)")
plot(Auto$year, Auto$mpg01, xlab = "Manufacture year")
mtext("Scatterplots for cars with above(1) and below(0) median mpg", outer = TRUE, line = -1.1)
plot(Auto$year, Auto$mpg)
abline(h = median(Auto$mpg), lwd = 2, col = "red")
plot(Auto$origin, Auto$mpg, xlab = "Origin", ylab = "MPG")
abline(h = median(Auto$mpg), lwd = 2, col = "red")
require(caTools)
set.seed(123)
split_data = sample.split(Auto1$mpg, SplitRatio = 0.70)
train1 = subset(Auto1, split_data==TRUE)
test1 = subset(Auto1, split_data==FALSE)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
require(caTools)
set.seed(123)
split_data = sample.split(Auto1$mpg, SplitRatio = 0.70)
train1 = subset(Auto1, split_data==TRUE)
test1 = subset(Auto1, split_data==FALSE)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
require(caTools)
set.seed(123)
split_data = sample.split(Auto1$mpg, SplitRatio = 0.70)
train = subset(Auto1, split_data==TRUE)
test = subset(Auto1, split_data==FALSE)
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
set.seed(1)
train = sample(dim(Auto)[1], size = 0.75*dim(Auto)[1])
lda.fit = lda(mpg01 ~ cylinders + displacement + horsepower + weight + year + origin, data = Auto, subset = train)
mean(Auto1_pred != test1$mpg01)
lda.pred = predict(lda.fit, Auto[-train, ])
table(lda.pred$class, Auto[-train, "mpg01"], dnn = c("Predicted", "Actual"))
1 - mean(lda.pred$class == Auto[-train, "mpg01"])
